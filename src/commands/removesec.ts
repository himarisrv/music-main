import { Command } from "..";
import { EmbedBuilder, SlashCommandBuilder } from "discord.js";
import type { ChatInputCommandInteraction } from "discord.js";

export default class RemoveCommand extends Command {
  readonly name = "removesec";
  override readonly inVoiceChannel = true;
  override readonly playing = true;
  readonly slashBuilder = new SlashCommandBuilder()
    .setName("removesec")
    .setDescription("ÊåáÂÆö„Åó„ÅüÂå∫ÈñìÂÜÖ„ÅÆÊõ≤„Çí„Åô„Åπ„Å¶„Ç≠„É•„Éº„Åã„ÇâÂâäÈô§„Åó„Åæ„Åô")
    .addIntegerOption(option => option.setName("start").setDescription("ÈñãÂßã‰ΩçÁΩÆ").setRequired(true))
    .addIntegerOption(option => option.setName("end").setDescription("ÁµÇ‰∫Ü‰ΩçÁΩÆ").setRequired(true));
  async onChatInput(interaction: ChatInputCommandInteraction<"cached">) {
    try {
      const start = interaction.options.getInteger("start", true);
      const end = interaction.options.getInteger("end", true);
      const queue = await this.distube.getQueue(interaction);
      if (!queue || queue.songs.length <= end || start < 0 || end < start) {
        interaction.reply({
          embeds: [
            new EmbedBuilder()
              .setColor("#e06666")
              .setTitle(`üöß | „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü`)
              .setDescription(`ÂâäÈô§‰ΩçÁΩÆ„ÅåÁØÑÂõ≤Â§ñ„Åß„Åô„ÄÇ\'/queue\'„ÅßÁèæÂú®„ÅÆ„Ç≠„É•„Éº„ÇíÁ¢∫Ë™ç„Åß„Åç„Åæ„Åô„ÄÇ`)
              .setTimestamp()
              .setAuthor({
                name: `${interaction.client.user.displayName}`,
                iconURL: `${interaction.client.user.displayAvatarURL()}`,
              }),
          ],
        });
        return;
      }
      // start„Åã„Çâend„Åæ„Åß„ÅÆÊõ≤„ÇíÂâäÈô§
      queue.songs.splice(start, end - start + 1);
      interaction.reply({
        embeds: [
          new EmbedBuilder()
            .setColor("#6fa8dc")
            .setTitle(`üóëÔ∏è | „Ç≠„É•„ÉºÂÜÖ„ÅÆÊõ≤„ÇíÂâäÈô§„Åó„Åæ„Åó„Åü`)
            .setTimestamp()
            .addFields({ name: "ÂâäÈô§„Åó„ÅüÊõ≤", value: `‰ΩçÁΩÆ ${start} „Åã„Çâ ${end} „Åæ„Åß„ÅÆÊõ≤` })
            .setAuthor({
              name: `${interaction.client.user.displayName}`,
              iconURL: `${interaction.client.user.displayAvatarURL()}`,
            }),
        ],
      });
    } catch (e) {
      console.error(e);
      interaction.reply({
        embeds: [
          new EmbedBuilder()
            .setColor("#e06666")
            .setTitle(`üöß | „Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü`)
            .setDescription(`Ê¨°„ÅÆ„Ç®„É©„Éº„ÅåÁô∫Áîü„Åó„Åæ„Åó„Åü„ÄÇ\n \`\`\`${e}\`\`\``)
            .setTimestamp()
            .setAuthor({
              name: `${interaction.client.user.displayName}`,
              iconURL: `${interaction.client.user.displayAvatarURL()}`,
            }),
        ],
      });
    }
  }
}
